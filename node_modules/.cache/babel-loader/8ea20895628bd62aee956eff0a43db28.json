{"ast":null,"code":"import _slicedToArray from \"D:\\\\js-work\\\\react-prac\\\\gitApi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\js-work\\\\react-prac\\\\gitApi\\\\src\\\\context\\\\github\\\\GitHubState.js\";\nimport React, { useReduser, useReducer } from \"react\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from \"../types\";\nimport axios from \"axios\";\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRETE = process.env.REACT_APP_CLIENT_SECRETE;\nexport const GithubState = ({\n  children\n}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n  console.log(process.env.REACT_APP_CLIENT_ID);\n\n  const _useReducer = useReducer(githubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const getUsers = async valuse => {\n    setLoading();\n    const response = await axios.get(\"https://api.github.com/search/users?q=\".concat(value, \"&client_id=\").concat(CLIENT_ID, \"&client_secret=\").concat(CLIENT_SECRETE));\n    dispatch({\n      type: SEARCH_USERS,\n      payload: []\n    });\n  };\n\n  const getUser = async name => {\n    setLoading(); //...\n\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    });\n  };\n\n  const getRepos = async name => {\n    setLoading(); //...\n\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    });\n  };\n\n  const clearUsers = () => {\n    //...\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  const user = state.user,\n        users = state.users,\n        loading = state.loading,\n        repos = state.repos;\n  return React.createElement(GithubContext.Provider, {\n    value: (getRepos, getUser, getUsers, setLoading, clearUsers, user, users, loading, repos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["D:\\js-work\\react-prac\\gitApi\\src\\context\\github\\GitHubState.js"],"names":["React","useReduser","useReducer","GithubContext","githubReducer","SEARCH_USERS","GET_USER","GET_REPOS","CLEAR_USERS","SET_LOADING","axios","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","CLIENT_SECRETE","REACT_APP_CLIENT_SECRETE","GithubState","children","initialState","user","users","loading","repos","console","log","state","dispatch","getUsers","valuse","setLoading","response","get","value","type","payload","getUser","name","getRepos","clearUsers"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,UANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA9B;AACA,MAAMC,cAAc,GAAGH,OAAO,CAACC,GAAR,CAAYG,wBAAnC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACC,GAAR,CAAYC,mBAAxB;;AAP2C,sBAQjBZ,UAAU,CAACE,aAAD,EAAgBe,YAAhB,CARO;AAAA;AAAA,QAQpCO,KARoC;AAAA,QAQ7BC,QAR6B;;AAS3C,QAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjCC,IAAAA,UAAU;AACV,UAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,iDACoBC,KADpB,wBACuCtB,SADvC,4BACkEI,cADlE,EAAvB;AAGAY,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE7B,YADC;AAEP8B,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GATD;;AAUA,QAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9BP,IAAAA,UAAU,GADoB,CAE9B;;AAEAH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE5B,QADC;AAEP6B,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GARD;;AASA,QAAMG,QAAQ,GAAG,MAAOD,IAAP,IAAgB;AAC/BP,IAAAA,UAAU,GADqB,CAE/B;;AAEAH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE3B,SADC;AAEP4B,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GARD;;AASA,QAAMI,UAAU,GAAG,MAAM;AACvB;AAEAZ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE1B;AADC,KAAD,CAAR;AAGD,GAND;;AAOA,QAAMsB,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEzB;AADC,KAAD,CAAR;AAGD,GAJD;;AA5C2C,QAiDnCW,IAjDmC,GAiDHM,KAjDG,CAiDnCN,IAjDmC;AAAA,QAiD7BC,KAjD6B,GAiDHK,KAjDG,CAiD7BL,KAjD6B;AAAA,QAiDtBC,OAjDsB,GAiDHI,KAjDG,CAiDtBJ,OAjDsB;AAAA,QAiDbC,KAjDa,GAiDHG,KAjDG,CAiDbH,KAjDa;AAkD3C,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,GACFe,QAAQ,EACTF,OADS,EAETR,QAFS,EAGTE,UAHS,EAITS,UAJS,EAKTnB,IALS,EAMTC,KANS,EAOTC,OAPS,EAQTC,KATG,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGL,QAbH,CADF;AAiBD,CAnEM","sourcesContent":["import React, { useReduser, useReducer } from \"react\";\r\nimport { GithubContext } from \"./githubContext\";\r\nimport { githubReducer } from \"./githubReducer\";\r\nimport {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  CLEAR_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRETE = process.env.REACT_APP_CLIENT_SECRETE;\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: [],\r\n  };\r\n  console.log(process.env.REACT_APP_CLIENT_ID);\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n  const getUsers = async (valuse) => {\r\n    setLoading();\r\n    const response = await axios.get(\r\n      `https://api.github.com/search/users?q=${value}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRETE}`\r\n    );\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: [],\r\n    });\r\n  };\r\n  const getUser = async (name) => {\r\n    setLoading();\r\n    //...\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: {},\r\n    });\r\n  };\r\n  const getRepos = async (name) => {\r\n    setLoading();\r\n    //...\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: [],\r\n    });\r\n  };\r\n  const clearUsers = () => {\r\n    //...\r\n\r\n    dispatch({\r\n      type: CLEAR_USERS,\r\n    });\r\n  };\r\n  const setLoading = () => {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n  };\r\n  const { user, users, loading, repos } = state;\r\n  return (\r\n    <GithubContext.Provider\r\n      value={\r\n        (getRepos,\r\n        getUser,\r\n        getUsers,\r\n        setLoading,\r\n        clearUsers,\r\n        user,\r\n        users,\r\n        loading,\r\n        repos)\r\n      }\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}