{"ast":null,"code":"import _defineProperty from \"D:\\\\js-work\\\\react-prac\\\\gitApi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_USERS, GET_REPOS, GET_USER, SET_LOADING } from \"../types\";\nexport const handlers = {\n  [SEARCH_USERS]: (state, {\n    payload\n  }) => _objectSpread({}, state, {\n    users: payload,\n    loading: false\n  }),\n  [GET_REPOS]: (state, {\n    payload\n  }) => _objectSpread({}, state, {\n    repos: payload,\n    loading: false\n  }),\n  [GET_USER]: (state, {\n    payload\n  }) => _objectSpread({}, state, {\n    user: payload,\n    loading: false\n  }),\n  [SET_LOADING]: state => _objectSpread({}, state, {\n    loading: true\n  }),\n  [SET_LOADING]: state => _objectSpread({}, state, {\n    users: []\n  }),\n  DEFAULT: state => state\n};\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  handler(state, action);\n};","map":{"version":3,"sources":["D:\\js-work\\react-prac\\gitApi\\src\\context\\github\\githubReducer.js"],"names":["SEARCH_USERS","GET_REPOS","GET_USER","SET_LOADING","handlers","state","payload","users","loading","repos","user","DEFAULT","githubReducer","action","handler","type"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,WAA5C,QAA+D,UAA/D;AAEA,OAAO,MAAMC,QAAQ,GAAG;AACtB,GAACJ,YAAD,GAAgB,CAACK,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,uBACXD,KADW;AAEdE,IAAAA,KAAK,EAAED,OAFO;AAGdE,IAAAA,OAAO,EAAE;AAHK,IADM;AAMtB,GAACP,SAAD,GAAa,CAACI,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,uBACRD,KADQ;AAEXI,IAAAA,KAAK,EAAEH,OAFI;AAGXE,IAAAA,OAAO,EAAE;AAHE,IANS;AAWtB,GAACN,QAAD,GAAY,CAACG,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,uBACPD,KADO;AAEVK,IAAAA,IAAI,EAAEJ,OAFI;AAGVE,IAAAA,OAAO,EAAE;AAHC,IAXU;AAgBtB,GAACL,WAAD,GAAgBE,KAAD,sBACVA,KADU;AAEbG,IAAAA,OAAO,EAAE;AAFI,IAhBO;AAoBtB,GAACL,WAAD,GAAgBE,KAAD,sBACVA,KADU;AAEbE,IAAAA,KAAK,EAAE;AAFM,IApBO;AAwBtBI,EAAAA,OAAO,EAAGN,KAAD,IAAWA;AAxBE,CAAjB;AA0BP,OAAO,MAAMO,aAAa,GAAG,CAACP,KAAD,EAAQQ,MAAR,KAAmB;AAC9C,QAAMC,OAAO,GAAGV,QAAQ,CAACS,MAAM,CAACE,IAAR,CAAR,IAAyBX,QAAQ,CAACO,OAAlD;AACAG,EAAAA,OAAO,CAACT,KAAD,EAAQQ,MAAR,CAAP;AACD,CAHM","sourcesContent":["import { SEARCH_USERS, GET_REPOS, GET_USER, SET_LOADING } from \"../types\";\r\n\r\nexport const handlers = {\r\n  [SEARCH_USERS]: (state, { payload }) => ({\r\n    ...state,\r\n    users: payload,\r\n    loading: false,\r\n  }),\r\n  [GET_REPOS]: (state, { payload }) => ({\r\n    ...state,\r\n    repos: payload,\r\n    loading: false,\r\n  }),\r\n  [GET_USER]: (state, { payload }) => ({\r\n    ...state,\r\n    user: payload,\r\n    loading: false,\r\n  }),\r\n  [SET_LOADING]: (state) => ({\r\n    ...state,\r\n    loading: true,\r\n  }),\r\n  [SET_LOADING]: (state) => ({\r\n    ...state,\r\n    users: [],\r\n  }),\r\n  DEFAULT: (state) => state,\r\n};\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  handler(state, action);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}