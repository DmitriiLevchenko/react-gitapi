{"ast":null,"code":"import _slicedToArray from \"D:\\\\js-work\\\\react-prac\\\\gitApi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\js-work\\\\react-prac\\\\gitApi\\\\src\\\\context\\\\github\\\\GitHubState.js\";\nimport React, { useReduser, useReducer } from \"react\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from \"../types\";\nexport const GithubState = ({\n  children\n}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n\n  const _useReducer = useReducer(githubReducer),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const search = async valuse => {\n    //...\n    dispatch({\n      type: SEARCH_USERS,\n      payload: []\n    });\n  };\n\n  const getUser = async name => {\n    //...\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    });\n  };\n\n  const getRepos = async name => {\n    //...\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    });\n  };\n\n  const clearUsers = () => {\n    //...\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  return React.createElement(GithubContext.Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["D:\\js-work\\react-prac\\gitApi\\src\\context\\github\\GitHubState.js"],"names":["React","useReduser","useReducer","GithubContext","githubReducer","SEARCH_USERS","GET_USER","GET_REPOS","CLEAR_USERS","SET_LOADING","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","valuse","type","payload","getUser","name","getRepos","clearUsers","setLoading"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,UANP;AAQA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;;AAD2C,sBAOjBd,UAAU,CAACE,aAAD,CAPO;AAAA;AAAA,QAOpCa,KAPoC;AAAA,QAO7BC,QAP6B;;AAQ3C,QAAMC,MAAM,GAAG,MAAOC,MAAP,IAAkB;AAC/B;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEhB,YADC;AAEPiB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9B;AAEAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf,QADC;AAEPgB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMG,QAAQ,GAAG,MAAOD,IAAP,IAAgB;AAC/B;AAEAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd,SADC;AAEPe,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD;;AAQA,QAAMI,UAAU,GAAG,MAAM;AACvB;AAEAR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GAND;;AAOA,QAAMmB,UAAU,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGD,GAJD;;AAKA,SAAO,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBE,QAAzB,CAAP;AACD,CA7CM","sourcesContent":["import React, { useReduser, useReducer } from \"react\";\r\nimport { GithubContext } from \"./githubContext\";\r\nimport { githubReducer } from \"./githubReducer\";\r\nimport {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  CLEAR_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: [],\r\n  };\r\n  const [state, dispatch] = useReducer(githubReducer);\r\n  const search = async (valuse) => {\r\n    //...\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: [],\r\n    });\r\n  };\r\n  const getUser = async (name) => {\r\n    //...\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: {},\r\n    });\r\n  };\r\n  const getRepos = async (name) => {\r\n    //...\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: [],\r\n    });\r\n  };\r\n  const clearUsers = () => {\r\n    //...\r\n\r\n    dispatch({\r\n      type: CLEAR_USERS,\r\n    });\r\n  };\r\n  const setLoading = () => {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n  };\r\n  return <GithubContext.Provider>{children}</GithubContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}